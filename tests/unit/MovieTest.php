<?php

namespace App\Tests\Unit;

use App\Entity\Movie;
use App\Tests\DatabasePrimer;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class MovieTest extends KernelTestCase
{

    /**
     * 
     *@var EntityManagerInterface
     */
    protected $entityManager;

    /**
     * @var Movie 
     */
    protected $movie;

    public function setUp():void
    {
        $kernel = self::bootKernel();

        DatabasePrimer::prime($kernel);

        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();

        //  Note: Movie DB has been modified to have the title in question - check what titles are in your DB columns before running tests
        $this->movie = $this->entityManager->getRepository(Movie::class)->findOneBy(['title' => 'The GodFather']);

    }

    protected function tearDown():void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->entityManager->close();
        $this->entityManager = null;
    }

    /** @test */
    public function the_get_id_fn_works()
    {
        //  Note: Modified assert to equal 1 on a fresh DB fixture load
        $this->assertEquals(21, $this->movie->getId());
    }

    /** @test */
    public function the_get_imddId_fn_works()
    {
        $this->assertEquals('tt0068646', $this->movie->getImdbId());
    }

    /** @test */
    public function the_get_title_fn_works()
    {
        $this->assertEquals('The GodFather', $this->movie->getTitle());
    }

    /** @test */
    public function the_get_image_fn_works()
    {
        $this->assertEquals('https://imdb-api.com/images/original/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_Ratio0.7046_AL_.jpg', $this->movie->getImage());   
    }

    /** @test */
    public function the_get_keywords_fn_works()
    {
        $this->assertEquals('crime family,mafia,patriarch,organized crime,gambling syndicate', $this->movie->getKeywords());
    }

    /** @test */
    public function the_get_runtime_fn_works()
    {
        $this->assertEquals('175', $this->movie->getRuntime());
    }

    /** @test */
    public function the_get_releaseDate_fn_works()
    {
        $this->assertEquals('1972-03-24', $this->movie->getReleaseDate());
    }

    /** @test */
    public function a_movie_record_can_be_created_in_the_database()
    //  We are testing the setter methods for the Mpvie entity
    {
        $movie = new Movie();
        $movie->setImdbId('imdbid');
        $movie->setTitle('imdb movie');
        $movie->setImage('image.jpeg');
        $movie->setKeywords('imdb,movies,create,symfony movies');
        $movie->setRuntime('60');
        $movie->setReleaseDate('2022-03-30');

        $this->entityManager->persist($movie);

        $this->entityManager->flush();

        $movieRepo = $this->entityManager->getRepository(Movie::class);

        $this->assertEquals('imdb movie', $movie->getTitle());
    }
}
