<?php

namespace App\Tests\Unit;

use App\Entity\Movie;
use App\Tests\DatabasePrimer;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class MovieTest extends KernelTestCase
{

    /**
     * 
     *@var EntityManagerInterface
     */
    protected $entityManager;

    /**
     * @var Movie 
     */
    protected $movie;

    public function setUp():void
    {
        $kernel = self::bootKernel();

        DatabasePrimer::prime($kernel);

        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();

        //  Note: Movie DB has been modified to have the title in question - check what titles are in your DB columns before running tests
        $this->movie = $this->entityManager->getRepository(Movie::class)->findOneBy(['title' => 'The GodFather']);

    }

    // protected function tearDown():void
    // {
    //     parent::tearDown(); // TODO: Change the autogenerated stub
    //     $this->entityManager->close();
    //     $this->entityManager = null;
    // }

    /** @test */
    public function the_get_id_fn_works()
    {
        //  Note: Modified assert to equal 1 on a fresh DB fixture load
        $this->assertEquals(21, $this->movie->getId());
    }

    /** @test */
    public function the_get_imddId_fn_works()
    {
        $this->assertEquals('YyitiVg=', $this->movie->getImdbId());
    }

    /** @test */
    public function the_get_title_fn_works()
    {
        $this->assertEquals('The GodFather', $this->movie->getTitle());
    }

    /** @test */
    public function the_get_image_fn_works()
    {
        $this->assertEquals('https://images.pexels.com/photos/3825280/pexels-photo-3825280.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500', $this->movie->getImage());   
    }

    /** @test */
    public function the_get_keywords_fn_works()
    {
        $this->assertEquals('crime family,mafia,patriarch,organized crime,gambling syndicate', $this->movie->getKeywords());
    }

    /** @test */
    public function the_get_runtime_fn_works()
    {
        $this->assertEquals('240', $this->movie->getRuntime());
    }

    /** @test */
    public function the_get_releaseDate_fn_works()
    {
        $this->assertEquals('2010-07-16', $this->movie->getReleaseDate());
    }
}
